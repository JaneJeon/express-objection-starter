version: 2
jobs:
  install-maintenance-lts:
    docker:
      - &node-maintenance-lts
        image: circleci/node:8 # to be updated to 10 once 2020 hits
    steps:
      - checkout
      - &restore-maintenance-lts-cache
        restore-cache:
          keys:
            - v1-node-8-dependencies-{{ checksum "yarn.lock" }}
            - v1-node-8-dependencies-
      - run: yarn install --frozen-lockfile
      - save-cache:
          paths:
            - node_modules
          key: v1-node-8-dependencies-{{ checksum "yarn.lock" }}

  install-active-lts:
    docker:
      - &node-active-lts
        image: circleci/node:10 # to be updated to 12 once 2020 hits
    steps:
      - checkout
      - &restore-active-lts-cache
        restore-cache:
          keys:
            - v1-node-10-dependencies-{{ checksum "yarn.lock" }}
            - v1-node-10-dependencies-
      - run: yarn install --frozen-lockfile
      - save-cache:
          paths:
            - node_modules
          key: v1-node-10-dependencies-{{ checksum "yarn.lock" }}

  lint:
    docker:
      - *node-active-lts
    steps:
      - checkout
      - *restore-active-lts-cache
      - run: yarn lint --format junit -o reports/junit/eslint/results.xml
      - &store-test-results
        store_test_results:
          path: reports/junit

  build:
    docker:
      - *node-active-lts
    steps:
      - checkout
      - *restore-active-lts-cache
      - run: yarn build
      - persist_to_workspace:
          root: '.'
          paths:
            - config/**/*.json
            - views/**/html.hbs
            - views/emails/index.js

  test-node-maintenance-lts:
    docker:
      - <<: *node-maintenance-lts
        environment: &base-env
          KNEX_CONNECTION_USER: &test-user knex
          KNEX_CONNECTION_DATABASE: &test-db test
      - &redis
        image: circleci/redis
      - &postgres
        image: circleci/postgres
        environment:
          POSTGRES_USER: *test-user
          POSTGRES_DB: *test-db
    steps:
      - checkout
      - *restore-maintenance-lts-cache
      - &attach-workspace
        attach_workspace:
          at: '.'
      - run:
          environment:
            JEST_JUNIT_OUTPUT_NAME: reports/junit/jest/node-maintenance-lts.xml
          command: &test yarn test --ci --runInBand --reporters=default --reporters=jest-junit --forceExit
      - *store-test-results

  # only this one gets to report coverage
  test-node-active-lts:
    docker:
      - <<: *node-active-lts
        environment: *base-env
      - *redis
      - *postgres
    steps:
      - checkout
      - *restore-active-lts-cache
      - *attach-workspace
      - run:
          environment:
            JEST_JUNIT_OUTPUT_NAME: reports/junit/jest/node-active-lts.xml
          command: yarn test --coverage --ci --runInBand --reporters=default --reporters=jest-junit --forceExit
      - *store-test-results
      - persist_to_workspace:
          root: '.'
          paths:
            - coverage

  coverage:
    docker:
      - *node-active-lts
    steps:
      - checkout
      - *restore-active-lts-cache
      - *attach-workspace
      - run: yarn coverage

  build-and-deploy-docs:
    docker:
      - *node-active-lts
    steps:
      - checkout
      - *restore-active-lts-cache
      - run: yarn docs:build
      - run: yarn docs:deploy

workflows:
  version: 2
  default:
    jobs:
      - install-maintenance-lts
      - install-active-lts
      - lint:
          requires:
            - install-maintenance-lts
            - install-active-lts
      - build:
          requires:
            - install-maintenance-lts
            - install-active-lts
      - test-node-maintenance-lts:
          requires:
            - lint
            - build
      - test-node-active-lts:
          requires:
            - lint
            - build
      - coverage:
          requires:
            - test-node-maintenance-lts
            - test-node-active-lts
      - build-and-deploy-docs:
          requires:
            - lint
          filters: &master-branch-only
            branches:
              only:
                - master
