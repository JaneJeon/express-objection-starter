version: 2
jobs:
  install:
    docker:
      - &node
        image: circleci/node
    steps:
      - checkout
      - &restore-cache
        restore-cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run: yarn install --frozen-lockfile
      - save-cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

  lint:
    docker:
      - *node
    steps:
      - checkout
      - *restore-cache
      - run: yarn lint

  build:
    docker:
      - *node
    steps:
      - checkout
      - *restore-cache
      - run: yarn build
      - persist_to_workspace:
          root: '.'
          # https://discuss.circleci.com/t/glob-patterns-document-persist-to-workspace-paths/17442
          # https://github.com/golang/go/issues/11862
          # CircleCI uses Go's "glob" pattern, it doesn't support the '**' match,
          # because of fucking course it doesn't, it's fucking Go and its Go-tards.
          # So for recursive folders, we need both /*/*.json AND /*.json!
          paths:
            - config/*/*.json
            - config/*.json
            - views/emails/*/html.hbs
            - views/emails/index.js

  test:
    docker:
      - <<: *node
        environment: &base-env
          KNEX_CONNECTION_USER: &test-user knex
          KNEX_CONNECTION_DATABASE: &test-db test
      - image: circleci/redis
      - image: circleci/postgres
        environment:
          POSTGRES_USER: *test-user
          POSTGRES_DB: *test-db
    steps:
      - checkout
      - *restore-cache
      - attach_workspace:
          at: '.'
      - run: yarn test --ci --runInBand
      - store_test_results:
          path: reports/junit
      - run: yarn coverage

  docs:
    docker:
      - *node
    steps:
      - checkout
      - *restore-cache
      - run: yarn docs:build
      - run: yarn docs:deploy

workflows:
  version: 2
  pipeline:
    jobs:
      - install
      - lint:
          requires:
            - install
      - build:
          requires:
            - lint
      - test:
          requires:
            - build
      - docs:
          requires:
            - lint
          filters: &master-branch-only
            branches:
              only:
                - master
