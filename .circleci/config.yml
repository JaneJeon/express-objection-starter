# most of this is ripped straight from Jest's config, since I'm sure they know their shit:
# https://github.com/facebook/jest/blob/master/.circleci/config.yml
aliases:
  - &restore-cache
    restore-cache:
      keys:
        - v1-dependencies-{{ checksum "yarn.lock" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

  - &save-cache
    save-cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "yarn.lock" }}

  - &install
    run: yarn install --frozen-lockfile

  - &test yarn test --coverage --ci --runInBand --reporters=default --reporters=jest-junit --forceExit

  - &master-branch-only
    branches:
      only:
        - master

  # - &store-test-results
  #   store_test_results:
  #     path: reports/junit

  - &test-db app

version: 2
jobs:
  lint:
    working_directory: ~/repo
    docker:
      - image: circleci/node
    steps:
      - checkout
      - *restore-cache
      - *install
      - *save-cache
      - run: yarn lint:check --format junit -o reports/junit/eslint/results.xml
      - store_test_results:
          path: reports/junit

  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node
      - image: circleci/redis
      - image: circleci/postgres
        environment:
          POSTGRES_DB: *test-db
    steps:
      - checkout
      - *restore-cache
      - *install
      - *save-cache
      - run:
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/jest/results.xml
          command: *test
      - store_test_results:
          path: reports/junit
      - run: yarn coverage

  docs-deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/node
    steps:
      - checkout
      - *restore-cache
      - *install
      - *save-cache
      - run: yarn docs:build
      - run: yarn docs:deploy

#
#   deploy:
#     docker:
#       - image: buildpack-deps:trusty
#     steps:
#       - checkout
#       - run: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - lint
      - test
      - docs-deploy:
          requires:
            - lint
          filters: *master-branch-only
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
